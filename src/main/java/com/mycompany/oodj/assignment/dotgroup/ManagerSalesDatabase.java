package com.mycompany.oodj.assignment.dotgroup;

import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;

import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
//import java.util.Locale;

public class ManagerSalesDatabase extends javax.swing.JFrame {
    
    FileOperation file = FileOperation.getInstance();

    public ManagerSalesDatabase() {
        initComponents();
        
        updateSalesTable(loadSales());
        setCalendarLocale();
    }
    
    private ArrayList<ManagerSales> loadSales() {
        return file.readSales();
//        return file.readSales(FileType.SALES);
    }
    
    private void setCalendarLocale() {
//        locale_Timezone.setLocale(Locale.US);
    }
    
    private void updateSalesTable(ArrayList<ManagerSales> sales) {
        DefaultTableModel model = (DefaultTableModel)table_SalesDatabase.getModel();
        model.setRowCount(0);
        
        for (ManagerSales sale : sales) {
            model.addRow(
                new Object[]{
                    sale.getSalesId(),
                    sale.getCustomerId(),
                    sale.getCustomerName(),
                    sale.getStartTime(),
                    sale.getEndTime(),
                    sale.getDuration(),
                    sale.getHallType(),
                    sale.getReason(),
                    sale.getTotalSales()
                }
            );
        }
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body_PanelMain = new javax.swing.JPanel();
        label_SalesTableTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_SalesDatabase = new javax.swing.JTable();
        aside_PanelFilter = new javax.swing.JPanel();
        label_HallType = new javax.swing.JLabel();
        radio_HallAuditorium = new javax.swing.JRadioButton();
        radio_HallBanquet = new javax.swing.JRadioButton();
        radio_HallMeetingRoom = new javax.swing.JRadioButton();
        button_Filter = new javax.swing.JButton();
        label_Sales = new javax.swing.JLabel();
        calendar_SalesMadeFilterStart = new com.toedter.calendar.JCalendar();
        label_StartDateTime = new javax.swing.JLabel();
        calendar_SalesMadeFilterEnd = new com.toedter.calendar.JCalendar();
        label_EndDateTime = new javax.swing.JLabel();
        text_DateSelected = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        body_PanelMain.setBackground(new java.awt.Color(0, 0, 51));

        label_SalesTableTitle.setBackground(new java.awt.Color(204, 255, 255));
        label_SalesTableTitle.setFont(new java.awt.Font("MesloLGM Nerd Font", 1, 24)); // NOI18N
        label_SalesTableTitle.setForeground(new java.awt.Color(255, 255, 255));
        label_SalesTableTitle.setText("Sales Table");

        table_SalesDatabase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Customer ID", "Customer Name", "Start DateTime", "End DateTime", "Duration", "Hall Type", "Reason", "Sales (RM)", "Date"
            }
        ));
        table_SalesDatabase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_SalesDatabaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_SalesDatabase);
        if (table_SalesDatabase.getColumnModel().getColumnCount() > 0) {
            table_SalesDatabase.getColumnModel().getColumn(0).setPreferredWidth(25);
        }

        aside_PanelFilter.setBackground(new java.awt.Color(0, 153, 204));

        label_HallType.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_HallType.setForeground(new java.awt.Color(255, 255, 255));
        label_HallType.setText("Hall Type");

        radio_HallAuditorium.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        radio_HallAuditorium.setForeground(new java.awt.Color(255, 255, 255));
        radio_HallAuditorium.setText("Auditorium");
        radio_HallAuditorium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_HallAuditoriumActionPerformed(evt);
            }
        });

        radio_HallBanquet.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        radio_HallBanquet.setForeground(new java.awt.Color(255, 255, 255));
        radio_HallBanquet.setText("Banquet Hall");

        radio_HallMeetingRoom.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        radio_HallMeetingRoom.setForeground(new java.awt.Color(255, 255, 255));
        radio_HallMeetingRoom.setText("Meeting Room");

        button_Filter.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        button_Filter.setText("Filter");
        button_Filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_FilterActionPerformed(evt);
            }
        });

        label_Sales.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_Sales.setForeground(new java.awt.Color(255, 255, 255));
        label_Sales.setText("Sales ");

        label_StartDateTime.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_StartDateTime.setForeground(new java.awt.Color(255, 255, 255));
        label_StartDateTime.setText("Start DateTime");

        label_EndDateTime.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        label_EndDateTime.setForeground(new java.awt.Color(255, 255, 255));
        label_EndDateTime.setText("End DateTime");

        javax.swing.GroupLayout aside_PanelFilterLayout = new javax.swing.GroupLayout(aside_PanelFilter);
        aside_PanelFilter.setLayout(aside_PanelFilterLayout);
        aside_PanelFilterLayout.setHorizontalGroup(
            aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aside_PanelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aside_PanelFilterLayout.createSequentialGroup()
                        .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_HallType)
                            .addComponent(radio_HallAuditorium)
                            .addComponent(radio_HallBanquet)
                            .addComponent(radio_HallMeetingRoom))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aside_PanelFilterLayout.createSequentialGroup()
                        .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendar_SalesMadeFilterStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_StartDateTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_EndDateTime)
                            .addComponent(calendar_SalesMadeFilterEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16))
            .addGroup(aside_PanelFilterLayout.createSequentialGroup()
                .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aside_PanelFilterLayout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(button_Filter))
                    .addGroup(aside_PanelFilterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label_Sales)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(text_DateSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        aside_PanelFilterLayout.setVerticalGroup(
            aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aside_PanelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_HallType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radio_HallAuditorium)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radio_HallBanquet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radio_HallMeetingRoom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_Sales)
                    .addComponent(text_DateSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_EndDateTime)
                    .addComponent(label_StartDateTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(aside_PanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(calendar_SalesMadeFilterStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calendar_SalesMadeFilterEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(button_Filter)
                .addGap(139, 139, 139))
        );

        javax.swing.GroupLayout body_PanelMainLayout = new javax.swing.GroupLayout(body_PanelMain);
        body_PanelMain.setLayout(body_PanelMainLayout);
        body_PanelMainLayout.setHorizontalGroup(
            body_PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(body_PanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(body_PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(body_PanelMainLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aside_PanelFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(body_PanelMainLayout.createSequentialGroup()
                        .addComponent(label_SalesTableTitle)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        body_PanelMainLayout.setVerticalGroup(
            body_PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(body_PanelMainLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(label_SalesTableTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(body_PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(body_PanelMainLayout.createSequentialGroup()
                        .addComponent(aside_PanelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(body_PanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body_PanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radio_HallAuditoriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_HallAuditoriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_HallAuditoriumActionPerformed

    private LocalDate convertToLocalDate(Date d){
        return d.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    }
    
    public boolean isDateBetween(LocalDate startDate, LocalDate endDate, LocalDate targetDate) {
        return startDate.isBefore(targetDate) && endDate.isAfter(targetDate);
    }
    

//    public boolean isDateBetween(LocalDate startDate, LocalDate endDate, LocalDate targetDate) {
//        Duration duration = Duration.between(startDate, targetDate);
//        return duration.toDays() >= 0 && Duration.between(targetDate, endDate).toDays() >= 0;
//    }
    
    public void getDateBetween() {
        DefaultTableModel model = (DefaultTableModel)table_SalesDatabase.getModel();
        int row = table_SalesDatabase.getSelectedRow();
        
        ArrayList<String> dateColumns = new ArrayList();
        
//        for (int row = 0; row < model.getRowCount(); row++) {
//            String value = (String)model.getValueAt(row, columnIndex);
//            columnData.add(value);
//        }
        
        model.setRowCount(0);
        
        
        
//        if 
//        
//        model.getValueAt(row, );
    }
    
    private void button_FilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_FilterActionPerformed
        // TODO add your handling code here:
        System.out.println(calendar_SalesMadeFilterStart.getDate());
        System.out.println(calendar_SalesMadeFilterEnd.getDate().toString());
//        calendar_SalesMadeFilterStart.
        LocalDate startDate = convertToLocalDate(calendar_SalesMadeFilterStart.getDate());
        LocalDate endDate = convertToLocalDate(calendar_SalesMadeFilterEnd.getDate());
        
//        DateTimeFormatter formatter(calendar_SalesMadeFilterStart.getDate()); 
        System.out.println(startDate);
        System.out.println(endDate);
        
        Period period;
        
//        System.out.println(Period.between(startDate, endDate));
        
        
//        calendar
//        formatter.format("dd-MM-yyyy HH:mm:ss");
        
//        FilterWeeklySales(calendar_SalesMadeFilterStart.getDate(), calendar_SalesMadeFilterEnd.getDate());
    }//GEN-LAST:event_button_FilterActionPerformed

    private void table_SalesDatabaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_SalesDatabaseMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)table_SalesDatabase.getModel();
        
        int row = table_SalesDatabase.getSelectedRow();        
        int column = table_SalesDatabase.getSelectedColumn();
        
        String dateTime = model.getValueAt(row, column).toString();
//            dateTime.
//        if (dateTime instancecof Object) {
            System.out.println(dateTime);
//        }
        
//            System.out.println(model.getValueAt(row, column));
//            System.out.println(dateTime);
        
        if (row > 0) {
            
//            String dateTime = (String)model.getValueAt(row, column);
//            
//            System.out.println(model.getValueAt(row, column));
//            System.out.println(dateTime);
//            
            String dateString = "";
            
//            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
//            String dateString = dateTime.format(formatter);
            System.out.println(dateString);
//            
            if (dateTime instanceof String) {
//                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
//                String dateString = dateTime.format(formatter);
            }  else {
                System.out.println("Selected column and row is not a date.");
            }
//            
            
//            String dateSelected = (String)model.getValueAt(row, column);
//            text_DateSelected.setText(dateString);
        }
    }//GEN-LAST:event_table_SalesDatabaseMouseClicked

//    public void FilterWeeklySales(LocalDateTime startDateTime, LocalDateTime endDateTime) {
////        Duration duration = Duration.between(start)
//    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerSalesDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerSalesDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerSalesDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerSalesDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ManagerSalesDatabase().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aside_PanelFilter;
    private javax.swing.JPanel body_PanelMain;
    private javax.swing.JButton button_Filter;
    private com.toedter.calendar.JCalendar calendar_SalesMadeFilterEnd;
    private com.toedter.calendar.JCalendar calendar_SalesMadeFilterStart;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_EndDateTime;
    private javax.swing.JLabel label_HallType;
    private javax.swing.JLabel label_Sales;
    private javax.swing.JLabel label_SalesTableTitle;
    private javax.swing.JLabel label_StartDateTime;
    private javax.swing.JRadioButton radio_HallAuditorium;
    private javax.swing.JRadioButton radio_HallBanquet;
    private javax.swing.JRadioButton radio_HallMeetingRoom;
    private javax.swing.JTable table_SalesDatabase;
    private javax.swing.JTextField text_DateSelected;
    // End of variables declaration//GEN-END:variables
}
